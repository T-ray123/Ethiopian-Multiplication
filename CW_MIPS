.data
list: .word 10,12 #memory holding a,b and the result
array1: .word 10,5,2,1 #column 1 that is responsible for halving numbers
array2: .word 12,24,48,96 #column 2  that is responsible for doubling numbers

result_s: .asciiz "The result is: " #output preamble
error_z: .asciiz "The Error is: " #error specify

.text

j main #used to jump over the following instruction




#the multiplication function
#$a0 contains pointer to array
#$v0 is used to return a value, either a 0 or 1, depending on the output

mult:
#load an address in a and b by using the address in $a0
#multiply a and b
#store result in array using the address of $a0
#return either 0 or 1 in $v0 depending on successful must

main:
la $t0, list         # put address of list into $t3
li $t2,  10        # put the index into $t2
add $t2, $t2, $t2    # double the index
add $t2, $t2, $t2    # double the index again (now 4x)
add $t1, $t2, $t0   # combine the two components of the address
lw $t3, 0($t1)       # get the value from the array cell

#put the address of array num in $a0
#calling mult function
#print the result or the error depending on the $v0
